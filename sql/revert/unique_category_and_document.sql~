-- Revert nlp_schema:unique_category_and_document from pg

BEGIN;

-- XXX Add DDLs here.

ALTER TABLE public.category_text DROP CONSTRAINT category_text_category_document_id_completed_processed_file_key;

ALTER TABLE public.document_text DROP CONSTRAINT document_text_original_document_id_completed_processed_file_key;

CREATE OR REPLACE FUNCTION public.insert_category_text(
	in_user_id integer,
	in_category_document_id character varying,
	in_category_document_text text,
	in_category_document_path character varying)
    RETURNS TABLE(id integer) 
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$
declare new_id integer;
declare new_path_id integer;
begin

perform log_message(in_user_id, 'insert_category_text', null);

insert into completed_processed_files
(file_path, is_complete)
values
(in_category_document_path, FALSE)
on conflict on constraint completed_processed_files_file_path_key do nothing;

select completed_processed_files.id into new_path_id 
from completed_processed_files
where file_path = in_category_document_path;

insert into category_text
(category_document_id, category_document_text, completed_processed_files_id) VALUES
(in_category_document_id, in_category_document_text, new_path_id)
returning category_text.id into new_id;

return QUERY
select new_id;

end;
$BODY$;

CREATE OR REPLACE FUNCTION public.insert_document_text(
	in_user_id integer,
	in_original_document_id character varying,
	in_original_document_text text,
	in_original_document_path character varying)
    RETURNS TABLE(document_id integer) 
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$
declare new_id integer;
declare new_path_id integer;
begin
perform log_message(in_user_id, 'insert_document_text', null);

insert into completed_processed_files
(file_path, is_complete)
values
(in_original_document_path, FALSE)
on conflict on constraint completed_processed_files_file_path_key do nothing;

select completed_processed_files.id into new_path_id 
from completed_processed_files
where file_path = in_original_document_path;

insert into document_text
(original_document_id, original_document_text, completed_processed_files_id) VALUES
(in_original_document_id, in_original_document_text, new_path_id)
returning document_text.id into new_id;

return query
select new_id;

end;
$BODY$;

COMMIT;
